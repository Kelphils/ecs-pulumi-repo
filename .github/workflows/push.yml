name: Pulumi-Ecs-Setup
on:
  push:
    branches:
      - main
jobs:
  infrastructure-setup:
    name: Infrastructure-setup
    runs-on: ubuntu-latest
    outputs:
      TASK_DEFINITION_NAME: ${{ steps.task-def.outputs.TASK_DEFINITION_NAME }}
      REPOSITORY_URL: ${{ steps.repo.outputs.REPOSITORY_URL }}
      REGISTRY_NAME: ${{ steps.registry.outputs.REGISTRY_NAME }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Pulumi
        run: |
          curl -fsSL https://get.pulumi.com/ | bash
          export PATH=$PATH:$HOME/.pulumi/bin
      - name: Pulumi Login
        run: pulumi login
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Configure AWS Credentials
        id:  aws-configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: |
          echo python3 --version
          pulumi stack select dev
          pip install -r requirements.txt
          pulumi preview
          pulumi up --yes
      - id: task-def
        run:  echo "TASK_DEFINITION_NAME=$(pulumi stack output task_definition_name)" >> "$GITHUB_OUTPUT"
      - id: repo
        run:  echo "REPOSITORY_URL=$(pulumi stack output repository_url)" >> "$GITHUB_OUTPUT"
      - id: registry
        run:  echo "REGISTRY_NAME=$(pulumi stack output registry_name)" >> "$GITHUB_OUTPUT"
          
      # - name: Install Pulumi
      #   run: |

      #   with:
      #     command: |
      #       up
      #     pulumi-version: "^3.5.0" # Specify the desired version of Pulumi
      #     stack-name: dev # When using an individual account, only use stack-name.
      #     expect-no-changes: true # When using an individual account, only use stack-name.
      #   env:
      #     PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}


  docker-build-push:
    name: docker-build-push
    needs: infrastructure-setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      #----------------------------------------------
      # -----  Login to AWS ECR  -----
      #----------------------------------------------
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ needs.infrastructure-setup.outputs.REGISTRY_NAME }}
          IMAGE_TAG: ${{ github.sha }}
          TASK_DEFINITION_NAME: ${{ needs.infrastructure-setup.outputs.TASK_DEFINITION_NAME }}
        run: |
          echo $IMAGE_TAG
          echo $ECR_REPOSITORY
          echo $ECR_REGISTRY
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./welcome-app
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  #   name: Build Docker Image
  #   runs-on: ubuntu-latest  
  #   steps:  
  #       - name: Checkout
  #         uses: actions/checkout@v2    
          

  #       - name: Login to Amazon ECR
  #         id: login-pf-aws-ecr
  #         uses: aws-actions/amazon-ecr-login@v1
          

  #       - name: Build and push the tagged docker image to Amazon ECR
  #         env:
  #           ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
  #           ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
  #           IMAGE_TAG: latest
  #         run: |
  #           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
  #           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
